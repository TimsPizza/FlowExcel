name: 🚀 Build and Release

on:
  push:
    tags:
      - 'v*.*.*'
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'draft'
        type: choice
        options:
          - draft
          - prerelease
          - release

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # 代码质量检查
  quality:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Install frontend dependencies
        run: pnpm install

      - name: Lint frontend code
        run: pnpm lint

      - name: Type check
        run: pnpm run build:frontend

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Install Python dependencies and run tests
        run: |
          cd src-python
          uv sync --dev
          uv run python src/test/run_all_tests.py

  # 多平台构建
  build:
    name: 🔨 Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    needs: quality
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: windows-x64
            os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            
          - platform: macos-x64
            os: macos-13  # Intel Mac
            rust_target: x86_64-apple-darwin
            
          - platform: macos-arm64
            os: macos-14  # Apple Silicon Mac
            rust_target: aarch64-apple-darwin
            
          - platform: linux-x64
            os: ubuntu-20.04
            rust_target: x86_64-unknown-linux-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'
          cache: 'pnpm'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install uv
        uses: astral-sh/setup-uv@v3

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust_target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      # Linux specific dependencies
      - name: Install Linux dependencies
        if: matrix.platform == 'linux-x64'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev

      # Install frontend dependencies
      - name: Install frontend dependencies
        run: pnpm install

      # Build Python backend
      - name: Build Python backend
        run: |
          cd src-python
          uv sync
          uv run python build_binary.py

      # Build frontend
      - name: Build frontend
        run: pnpm build:frontend

      # Build Tauri app
      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'FlowExcel v${{ github.ref_name }}'
          releaseBody: |
            ## 🎉 FlowExcel ${{ github.ref_name }} 发布
            
            ### 📦 支持平台
            - Windows x64
            - macOS Intel (x64)  
            - macOS Apple Silicon (ARM64)
            - Linux x64
            
            ### 📋 更新内容
            请查看 [提交历史](https://github.com/${{ github.repository }}/commits/${{ github.ref_name }}) 了解详细更新。
            
            ---
            **⚠️ 首次使用请查看 [使用说明](https://github.com/${{ github.repository }}#readme)**
          releaseDraft: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.release_type == 'draft') || github.event_name == 'push' }}
          prerelease: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.release_type == 'prerelease' }}
          includeDebug: false
          includeRelease: true

  # 发布通知
  notify:
    name: 📢 Release Notification
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Send notification
        run: |
          echo "🎉 FlowExcel ${{ github.ref_name }} 已成功构建和发布！"
          echo "📦 下载地址: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}" 